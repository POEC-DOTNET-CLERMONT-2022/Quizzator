// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quizzator.Persistance;

#nullable disable

namespace Quizzator.Persistance.Migrations
{
    [DbContext(typeof(QuizContext))]
    [Migration("20220216151702_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Quizzator.Entity.LinksEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Element")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReponseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PrimaryKey_LinksId");

                    b.HasIndex("ReponseId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("Quizzator.Entity.QuestionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Texte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ThemeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PrimaryKey_QuestionId");

                    b.HasIndex("ThemeId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Quizzator.Entity.ReponseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Explication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Texte")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PrimaryKey_ReponseId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Reponses");
                });

            modelBuilder.Entity("Quizzator.Entity.ThemeExEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThemeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PrimaryKey_ThemeId");

                    b.ToTable("ThemeEx");
                });

            modelBuilder.Entity("Quizzator.Entity.LinksEntity", b =>
                {
                    b.HasOne("Quizzator.Entity.ReponseEntity", "Reponse")
                        .WithMany("Liens")
                        .HasForeignKey("ReponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reponse");
                });

            modelBuilder.Entity("Quizzator.Entity.QuestionEntity", b =>
                {
                    b.HasOne("Quizzator.Entity.ThemeExEntity", "ThemeEx")
                        .WithMany("Questions")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThemeEx");
                });

            modelBuilder.Entity("Quizzator.Entity.ReponseEntity", b =>
                {
                    b.HasOne("Quizzator.Entity.QuestionEntity", "Question")
                        .WithMany("ReponseList")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Quizzator.Entity.QuestionEntity", b =>
                {
                    b.Navigation("ReponseList");
                });

            modelBuilder.Entity("Quizzator.Entity.ReponseEntity", b =>
                {
                    b.Navigation("Liens");
                });

            modelBuilder.Entity("Quizzator.Entity.ThemeExEntity", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
